// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: accommodation.proto

package accommodation

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateHouseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId       string   `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Address       string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Price         float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	PropertyType  string   `protobuf:"bytes,4,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Bedrooms      int32    `protobuf:"varint,5,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms     int32    `protobuf:"varint,6,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	SquareFootage float32  `protobuf:"fixed32,7,opt,name=square_footage,json=squareFootage,proto3" json:"square_footage,omitempty"`
	ListingStatus string   `protobuf:"bytes,8,opt,name=listing_status,json=listingStatus,proto3" json:"listing_status,omitempty"`
	Description   string   `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	RoommateCount int32    `protobuf:"varint,10,opt,name=roommate_count,json=roommateCount,proto3" json:"roommate_count,omitempty"`
	LeaseTerms    string   `protobuf:"bytes,11,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
	LeaseDuration int32    `protobuf:"varint,12,opt,name=lease_duration,json=leaseDuration,proto3" json:"lease_duration,omitempty"`
	TopStatus     bool     `protobuf:"varint,13,opt,name=top_status,json=topStatus,proto3" json:"top_status,omitempty"`
	ImageUrl      []string `protobuf:"bytes,14,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Latitude      float32  `protobuf:"fixed32,15,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32  `protobuf:"fixed32,16,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *CreateHouseReq) Reset() {
	*x = CreateHouseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseReq) ProtoMessage() {}

func (x *CreateHouseReq) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseReq.ProtoReflect.Descriptor instead.
func (*CreateHouseReq) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateHouseReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateHouseReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateHouseReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateHouseReq) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *CreateHouseReq) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *CreateHouseReq) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *CreateHouseReq) GetSquareFootage() float32 {
	if x != nil {
		return x.SquareFootage
	}
	return 0
}

func (x *CreateHouseReq) GetListingStatus() string {
	if x != nil {
		return x.ListingStatus
	}
	return ""
}

func (x *CreateHouseReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHouseReq) GetRoommateCount() int32 {
	if x != nil {
		return x.RoommateCount
	}
	return 0
}

func (x *CreateHouseReq) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

func (x *CreateHouseReq) GetLeaseDuration() int32 {
	if x != nil {
		return x.LeaseDuration
	}
	return 0
}

func (x *CreateHouseReq) GetTopStatus() bool {
	if x != nil {
		return x.TopStatus
	}
	return false
}

func (x *CreateHouseReq) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *CreateHouseReq) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateHouseReq) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type CreateHouseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string   `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Address       string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Price         float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	PropertyType  string   `protobuf:"bytes,5,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Bedrooms      int32    `protobuf:"varint,6,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms     int32    `protobuf:"varint,7,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	SquareFootage float32  `protobuf:"fixed32,8,opt,name=square_footage,json=squareFootage,proto3" json:"square_footage,omitempty"`
	ListingStatus string   `protobuf:"bytes,9,opt,name=listing_status,json=listingStatus,proto3" json:"listing_status,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	RoommateCount int32    `protobuf:"varint,11,opt,name=roommate_count,json=roommateCount,proto3" json:"roommate_count,omitempty"`
	LeaseTerms    string   `protobuf:"bytes,12,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
	LeaseDuration int32    `protobuf:"varint,13,opt,name=lease_duration,json=leaseDuration,proto3" json:"lease_duration,omitempty"`
	TopStatus     bool     `protobuf:"varint,14,opt,name=top_status,json=topStatus,proto3" json:"top_status,omitempty"`
	ImageUrl      []string `protobuf:"bytes,15,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt     string   `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string   `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Latitude      float32  `protobuf:"fixed32,18,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32  `protobuf:"fixed32,19,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *CreateHouseRes) Reset() {
	*x = CreateHouseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHouseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHouseRes) ProtoMessage() {}

func (x *CreateHouseRes) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHouseRes.ProtoReflect.Descriptor instead.
func (*CreateHouseRes) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHouseRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateHouseRes) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateHouseRes) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateHouseRes) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CreateHouseRes) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *CreateHouseRes) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *CreateHouseRes) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *CreateHouseRes) GetSquareFootage() float32 {
	if x != nil {
		return x.SquareFootage
	}
	return 0
}

func (x *CreateHouseRes) GetListingStatus() string {
	if x != nil {
		return x.ListingStatus
	}
	return ""
}

func (x *CreateHouseRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHouseRes) GetRoommateCount() int32 {
	if x != nil {
		return x.RoommateCount
	}
	return 0
}

func (x *CreateHouseRes) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

func (x *CreateHouseRes) GetLeaseDuration() int32 {
	if x != nil {
		return x.LeaseDuration
	}
	return 0
}

func (x *CreateHouseRes) GetTopStatus() bool {
	if x != nil {
		return x.TopStatus
	}
	return false
}

func (x *CreateHouseRes) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *CreateHouseRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateHouseRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CreateHouseRes) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateHouseRes) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateHouseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string   `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Address       string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Price         float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	PropertyType  string   `protobuf:"bytes,5,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Bedrooms      int32    `protobuf:"varint,6,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms     int32    `protobuf:"varint,7,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	SquareFootage float32  `protobuf:"fixed32,8,opt,name=square_footage,json=squareFootage,proto3" json:"square_footage,omitempty"`
	ListingStatus string   `protobuf:"bytes,9,opt,name=listing_status,json=listingStatus,proto3" json:"listing_status,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	RoommateCount int32    `protobuf:"varint,11,opt,name=roommate_count,json=roommateCount,proto3" json:"roommate_count,omitempty"`
	LeaseTerms    string   `protobuf:"bytes,12,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
	LeaseDuration int32    `protobuf:"varint,13,opt,name=lease_duration,json=leaseDuration,proto3" json:"lease_duration,omitempty"`
	TopStatus     bool     `protobuf:"varint,14,opt,name=top_status,json=topStatus,proto3" json:"top_status,omitempty"`
	ImageUrl      []string `protobuf:"bytes,15,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Latitude      float32  `protobuf:"fixed32,16,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32  `protobuf:"fixed32,17,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *UpdateHouseReq) Reset() {
	*x = UpdateHouseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHouseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHouseReq) ProtoMessage() {}

func (x *UpdateHouseReq) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHouseReq.ProtoReflect.Descriptor instead.
func (*UpdateHouseReq) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateHouseReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateHouseReq) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *UpdateHouseReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateHouseReq) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateHouseReq) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *UpdateHouseReq) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *UpdateHouseReq) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *UpdateHouseReq) GetSquareFootage() float32 {
	if x != nil {
		return x.SquareFootage
	}
	return 0
}

func (x *UpdateHouseReq) GetListingStatus() string {
	if x != nil {
		return x.ListingStatus
	}
	return ""
}

func (x *UpdateHouseReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateHouseReq) GetRoommateCount() int32 {
	if x != nil {
		return x.RoommateCount
	}
	return 0
}

func (x *UpdateHouseReq) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

func (x *UpdateHouseReq) GetLeaseDuration() int32 {
	if x != nil {
		return x.LeaseDuration
	}
	return 0
}

func (x *UpdateHouseReq) GetTopStatus() bool {
	if x != nil {
		return x.TopStatus
	}
	return false
}

func (x *UpdateHouseReq) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *UpdateHouseReq) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateHouseReq) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateHouseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateHouseRes) Reset() {
	*x = UpdateHouseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHouseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHouseRes) ProtoMessage() {}

func (x *UpdateHouseRes) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHouseRes.ProtoReflect.Descriptor instead.
func (*UpdateHouseRes) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateHouseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetallHouseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetallHouseReq) Reset() {
	*x = GetallHouseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetallHouseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetallHouseReq) ProtoMessage() {}

func (x *GetallHouseReq) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetallHouseReq.ProtoReflect.Descriptor instead.
func (*GetallHouseReq) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{4}
}

func (x *GetallHouseReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetallHouseReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetAllHouses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string   `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Address       string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Price         float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	PropertyType  string   `protobuf:"bytes,5,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Bedrooms      int32    `protobuf:"varint,6,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms     int32    `protobuf:"varint,7,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	SquareFootage float32  `protobuf:"fixed32,8,opt,name=square_footage,json=squareFootage,proto3" json:"square_footage,omitempty"`
	ListingStatus string   `protobuf:"bytes,9,opt,name=listing_status,json=listingStatus,proto3" json:"listing_status,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	RoommateCount int32    `protobuf:"varint,11,opt,name=roommate_count,json=roommateCount,proto3" json:"roommate_count,omitempty"`
	LeaseTerms    string   `protobuf:"bytes,12,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
	LeaseDuration int32    `protobuf:"varint,13,opt,name=lease_duration,json=leaseDuration,proto3" json:"lease_duration,omitempty"`
	TopStatus     bool     `protobuf:"varint,14,opt,name=top_status,json=topStatus,proto3" json:"top_status,omitempty"`
	ImageUrl      []string `protobuf:"bytes,15,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt     string   `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string   `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Latitude      float32  `protobuf:"fixed32,18,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32  `protobuf:"fixed32,19,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *GetAllHouses) Reset() {
	*x = GetAllHouses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllHouses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHouses) ProtoMessage() {}

func (x *GetAllHouses) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHouses.ProtoReflect.Descriptor instead.
func (*GetAllHouses) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllHouses) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAllHouses) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetAllHouses) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetAllHouses) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetAllHouses) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *GetAllHouses) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *GetAllHouses) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *GetAllHouses) GetSquareFootage() float32 {
	if x != nil {
		return x.SquareFootage
	}
	return 0
}

func (x *GetAllHouses) GetListingStatus() string {
	if x != nil {
		return x.ListingStatus
	}
	return ""
}

func (x *GetAllHouses) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetAllHouses) GetRoommateCount() int32 {
	if x != nil {
		return x.RoommateCount
	}
	return 0
}

func (x *GetAllHouses) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

func (x *GetAllHouses) GetLeaseDuration() int32 {
	if x != nil {
		return x.LeaseDuration
	}
	return 0
}

func (x *GetAllHouses) GetTopStatus() bool {
	if x != nil {
		return x.TopStatus
	}
	return false
}

func (x *GetAllHouses) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *GetAllHouses) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetAllHouses) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetAllHouses) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetAllHouses) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GetAllHouseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	House []*GetAllHouses `protobuf:"bytes,1,rep,name=house,proto3" json:"house,omitempty"`
}

func (x *GetAllHouseRes) Reset() {
	*x = GetAllHouseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllHouseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllHouseRes) ProtoMessage() {}

func (x *GetAllHouseRes) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllHouseRes.ProtoReflect.Descriptor instead.
func (*GetAllHouseRes) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllHouseRes) GetHouse() []*GetAllHouses {
	if x != nil {
		return x.House
	}
	return nil
}

type GetByIdHouseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIdHouseReq) Reset() {
	*x = GetByIdHouseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdHouseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdHouseReq) ProtoMessage() {}

func (x *GetByIdHouseReq) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdHouseReq.ProtoReflect.Descriptor instead.
func (*GetByIdHouseReq) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{7}
}

func (x *GetByIdHouseReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIdHouseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string   `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	Address       string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Price         float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	PropertyType  string   `protobuf:"bytes,5,opt,name=property_type,json=propertyType,proto3" json:"property_type,omitempty"`
	Bedrooms      int32    `protobuf:"varint,6,opt,name=bedrooms,proto3" json:"bedrooms,omitempty"`
	Bathrooms     int32    `protobuf:"varint,7,opt,name=bathrooms,proto3" json:"bathrooms,omitempty"`
	SquareFootage float32  `protobuf:"fixed32,8,opt,name=square_footage,json=squareFootage,proto3" json:"square_footage,omitempty"`
	ListingStatus string   `protobuf:"bytes,9,opt,name=listing_status,json=listingStatus,proto3" json:"listing_status,omitempty"`
	Description   string   `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	RoommateCount int32    `protobuf:"varint,11,opt,name=roommate_count,json=roommateCount,proto3" json:"roommate_count,omitempty"`
	LeaseTerms    string   `protobuf:"bytes,12,opt,name=lease_terms,json=leaseTerms,proto3" json:"lease_terms,omitempty"`
	LeaseDuration int32    `protobuf:"varint,13,opt,name=lease_duration,json=leaseDuration,proto3" json:"lease_duration,omitempty"`
	TopStatus     bool     `protobuf:"varint,14,opt,name=top_status,json=topStatus,proto3" json:"top_status,omitempty"`
	ImageUrl      []string `protobuf:"bytes,15,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt     string   `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string   `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Latitude      float32  `protobuf:"fixed32,18,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float32  `protobuf:"fixed32,19,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *GetByIdHouseRes) Reset() {
	*x = GetByIdHouseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIdHouseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIdHouseRes) ProtoMessage() {}

func (x *GetByIdHouseRes) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIdHouseRes.ProtoReflect.Descriptor instead.
func (*GetByIdHouseRes) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{8}
}

func (x *GetByIdHouseRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetByIdHouseRes) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *GetByIdHouseRes) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetByIdHouseRes) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetByIdHouseRes) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *GetByIdHouseRes) GetBedrooms() int32 {
	if x != nil {
		return x.Bedrooms
	}
	return 0
}

func (x *GetByIdHouseRes) GetBathrooms() int32 {
	if x != nil {
		return x.Bathrooms
	}
	return 0
}

func (x *GetByIdHouseRes) GetSquareFootage() float32 {
	if x != nil {
		return x.SquareFootage
	}
	return 0
}

func (x *GetByIdHouseRes) GetListingStatus() string {
	if x != nil {
		return x.ListingStatus
	}
	return ""
}

func (x *GetByIdHouseRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetByIdHouseRes) GetRoommateCount() int32 {
	if x != nil {
		return x.RoommateCount
	}
	return 0
}

func (x *GetByIdHouseRes) GetLeaseTerms() string {
	if x != nil {
		return x.LeaseTerms
	}
	return ""
}

func (x *GetByIdHouseRes) GetLeaseDuration() int32 {
	if x != nil {
		return x.LeaseDuration
	}
	return 0
}

func (x *GetByIdHouseRes) GetTopStatus() bool {
	if x != nil {
		return x.TopStatus
	}
	return false
}

func (x *GetByIdHouseRes) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

func (x *GetByIdHouseRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetByIdHouseRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetByIdHouseRes) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *GetByIdHouseRes) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type DeleteHouseReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteHouseReq) Reset() {
	*x = DeleteHouseReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHouseReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHouseReq) ProtoMessage() {}

func (x *DeleteHouseReq) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHouseReq.ProtoReflect.Descriptor instead.
func (*DeleteHouseReq) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteHouseReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteHouseRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteHouseRes) Reset() {
	*x = DeleteHouseRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_accommodation_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHouseRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHouseRes) ProtoMessage() {}

func (x *DeleteHouseRes) ProtoReflect() protoreflect.Message {
	mi := &file_accommodation_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHouseRes.ProtoReflect.Descriptor instead.
func (*DeleteHouseRes) Descriptor() ([]byte, []int) {
	return file_accommodation_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteHouseRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_accommodation_proto protoreflect.FileDescriptor

var file_accommodation_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x04, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x6f, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x46, 0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x6d,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0xdd, 0x04, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f,
	0x6f, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x6f,
	0x6d, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x9f, 0x04, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x64,
	0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f,
	0x6f, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x6f,
	0x6d, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0xdb, 0x04, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x65,
	0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x43,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x31, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x52, 0x05, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xde, 0x04, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x65,
	0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x74, 0x68, 0x72,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x5f, 0x66,
	0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f,
	0x6f, 0x6d, 0x6d, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x9a, 0x03, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x6f,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x48, 0x6f, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x6f, 0x75, 0x73, 0x65, 0x12, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_accommodation_proto_rawDescOnce sync.Once
	file_accommodation_proto_rawDescData = file_accommodation_proto_rawDesc
)

func file_accommodation_proto_rawDescGZIP() []byte {
	file_accommodation_proto_rawDescOnce.Do(func() {
		file_accommodation_proto_rawDescData = protoimpl.X.CompressGZIP(file_accommodation_proto_rawDescData)
	})
	return file_accommodation_proto_rawDescData
}

var file_accommodation_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_accommodation_proto_goTypes = []interface{}{
	(*CreateHouseReq)(nil),  // 0: accommodation.CreateHouseReq
	(*CreateHouseRes)(nil),  // 1: accommodation.CreateHouseRes
	(*UpdateHouseReq)(nil),  // 2: accommodation.UpdateHouseReq
	(*UpdateHouseRes)(nil),  // 3: accommodation.UpdateHouseRes
	(*GetallHouseReq)(nil),  // 4: accommodation.GetallHouseReq
	(*GetAllHouses)(nil),    // 5: accommodation.GetAllHouses
	(*GetAllHouseRes)(nil),  // 6: accommodation.GetAllHouseRes
	(*GetByIdHouseReq)(nil), // 7: accommodation.GetByIdHouseReq
	(*GetByIdHouseRes)(nil), // 8: accommodation.GetByIdHouseRes
	(*DeleteHouseReq)(nil),  // 9: accommodation.DeleteHouseReq
	(*DeleteHouseRes)(nil),  // 10: accommodation.DeleteHouseRes
}
var file_accommodation_proto_depIdxs = []int32{
	5,  // 0: accommodation.GetAllHouseRes.house:type_name -> accommodation.GetAllHouses
	0,  // 1: accommodation.AccommodationService.CreateHouse:input_type -> accommodation.CreateHouseReq
	2,  // 2: accommodation.AccommodationService.UpdateHouse:input_type -> accommodation.UpdateHouseReq
	4,  // 3: accommodation.AccommodationService.GetAllHouse:input_type -> accommodation.GetallHouseReq
	7,  // 4: accommodation.AccommodationService.GetByIdHouse:input_type -> accommodation.GetByIdHouseReq
	9,  // 5: accommodation.AccommodationService.DeleteHouse:input_type -> accommodation.DeleteHouseReq
	1,  // 6: accommodation.AccommodationService.CreateHouse:output_type -> accommodation.CreateHouseRes
	3,  // 7: accommodation.AccommodationService.UpdateHouse:output_type -> accommodation.UpdateHouseRes
	6,  // 8: accommodation.AccommodationService.GetAllHouse:output_type -> accommodation.GetAllHouseRes
	8,  // 9: accommodation.AccommodationService.GetByIdHouse:output_type -> accommodation.GetByIdHouseRes
	10, // 10: accommodation.AccommodationService.DeleteHouse:output_type -> accommodation.DeleteHouseRes
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_accommodation_proto_init() }
func file_accommodation_proto_init() {
	if File_accommodation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_accommodation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHouseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHouseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHouseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHouseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetallHouseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllHouses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllHouseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdHouseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIdHouseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHouseReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_accommodation_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHouseRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_accommodation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_accommodation_proto_goTypes,
		DependencyIndexes: file_accommodation_proto_depIdxs,
		MessageInfos:      file_accommodation_proto_msgTypes,
	}.Build()
	File_accommodation_proto = out.File
	file_accommodation_proto_rawDesc = nil
	file_accommodation_proto_goTypes = nil
	file_accommodation_proto_depIdxs = nil
}
