basePath: /auth
definitions:
  models.AccessToken:
    properties:
      access_token:
        type: string
    type: object
  models.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RefreshToken:
    properties:
      refresh_token:
        type: string
    type: object
  models.RegisterData:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.RegisterResp:
    properties:
      id:
        type: string
    type: object
  models.ResetPassReq:
    properties:
      code:
        type: string
      email:
        type: string
      new_password:
        type: string
    type: object
  models.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
info:
  contact: {}
  description: Authorazation API of RentHub
  title: Authorazation
  version: "1.0"
paths:
  /forgot-password:
    post:
      description: Sends password reset email
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: Check your email to reset password
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Forgot password
      tags:
      - auth
  /login:
    post:
      description: Logs user in
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.LoginReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Login user
      tags:
      - auth
  /logout:
    post:
      description: Logouts user
      parameters:
      - description: User email
        in: query
        name: email
        required: true
        type: string
      responses:
        "200":
          description: User logged out successfully
          schema:
            type: string
        "400":
          description: Invalid email
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Logouts user
      tags:
      - auth
  /refresh-token:
    post:
      description: Refreshes refresh token
      parameters:
      - description: Refresh token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.RefreshToken'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tokens'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Refreshes token
      tags:
      - auth
  /register:
    post:
      description: Registers a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterData'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterResp'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Registers user
      tags:
      - auth
  /reset-password:
    post:
      description: Resets password
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassReq'
      responses:
        "200":
          description: Password reset successfully
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Resets password
      tags:
      - auth
  /validate-token:
    post:
      description: Validates access token
      parameters:
      - description: Access token
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.AccessToken'
      responses:
        "200":
          description: Access token is valid
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error while processing request
          schema:
            type: string
      summary: Validates token
      tags:
      - auth
swagger: "2.0"
